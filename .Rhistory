devtools::install_github(c("swirldev/swirl", "swirldev/swirlify"))
library(swirlify)
swirl()
5 + 7
quit()
library(swirlify)
getwd()
new_lesson("Clase 002", "Introduction to R IFISICA")
x <- data.frame(a = 1, b = "a", )
x <- data.frame(a = 1, b = "a")
x
dput(x)
dput("dputdata.R")
dput(x, "dputdata.R")
recoveredData <- dget("dputdata.R")
recoverredData
recoveredData
x <- "somechar"
y <- data.frame(a = 1, b = "a")
dump(c(x, y), file = "datadump.R")
dump(c("x", "y"), file = "datadump.R")
rm(x, y)
ls()
rm("recoveredData")
ls()
y
source("datadump.R")
x
y
conection3 <- url("http://www.jhsph.edu", "r")
conection3
x <- readLines(conection3)
x
head(x)
summary(x)
x[6]
x[7]
x[19]
x[20]
x[22]
x[24]
for(i in 1:10){
print(i)
}
i
x <- c("a", "b", "c", "d")
seq_along(x)
x <- matrix(1:6, 2, 3)
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i, j])
}
}
for(i in seq_len(nrow(x))){
for(j in seq_len(ncol(x))){
print(x[i, j])
}
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z+1
} else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z+1
} else {
z <- z - 1
}
}
z <- 5
while(z >= 3 && z <= 10){
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z+1
} else {
z <- z - 1
}
}
data <- rnorm(100)
var(data)
var(x = data)
var(x = data, na.rm = FALSE)
var(na.rm = FALSE, x = data )
var(na.rm = FALSE, data)
args(var)
lm(data = data, y ~ x, model = FALSE, 1:100)
lm(y ~ x, data, 1:100, model = FALSE)
misdatos <- rnorm(100)
lm(data = misdatos, y ~ x, model = FALSE, 1:100)
args(lm)
lm(data = misdatos, y ~ x, model = FALSE, 1:100)
lm(data = misdatos, y ~ x, model = FALSE)
lm(data = misdatos, y ~ x, model = FALSE)
lm(y~x)
lm(y~x, misdatos)
misdatos
lm(y~x, misdatos, 1:100)
g <- function(a, b){
a ^ 2
}
g(2)
g(2, 4)
g(5)
g(5)
g <- function(a, b){
print(a)
print(b)
}
g(5)
paste("hol", "a", sep=" ")
paste("hol", "a", se=" ")
paste("hol", "a", sep=" ")
paste("hol", "a", se=" ")
paste("hol", "a", se="")
paste("hol", "a", sep="")
args(paste)
library(ggplot2)
```{r echo=FALSE, results='hide', message=FALSE}
setwd("~/CY-Denovo-Ref-Cb-Zf")
setwd("CY-Denovo-Ref-Cb-Zf")
setwd("/Users/natorro/Desktop/curso_r_ifisica/example_code/chara_yucateca-genomicPolimor/CY-Denovo-Ref-Cb-Zf")
archivos <- list.files(pattern = "formato_sumstats*")
for (file in archivos){
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
filename <- gsub(".*formato_sumstats_(.*)\\..*", "\\1", file)
temp_dataset$Experiment <- filename
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
filename <- gsub(".*formato_sumstats_(.*)\\..*", "\\1", file)
dataset$Experiment <- filename
}
}
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Fis))
denovo_ref + geom_boxplot() + stat_boxplot ()
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Pi))
denovo_ref + geom_boxplot() + stat_boxplot ()
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Pi))
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Fis))
denovo_ref + geom_boxplot() + stat_boxplot ()
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Pi))
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Pi))
denovo_ref + geom_boxplot() + stat_boxplot ()
denovo_ref <- ggplot(dataset, aes(factor(Experiment), Pi))
denovo_ref + geom_boxplot () + stat_boxplot ()
ggplot(dataset) + geom_point(aes(x=ExpHet, y=ObsHet, colour=Experiment), alpha=I(1/10)) + facet_grid(. ~ Experiment)
maf <- ggplot(dataset, aes(x=P)) + facet_grid(. ~ Experiment)
maf + geom_histogram(aes(y = ..density..))
rm(list=ls())
ggplot(dataset) + geom_point(aes(x=BP, y=SmoothedPi, colour=Experiment), alpha=I(1/10)) + facet_grid(. ~ Experiment)
x <- 1
y <- 1
f <- function(x, y){ x/z; y/z}
f(x, y)
x <- 1
2 <- 1
z <- 2
f(x, y)
toThePower(3)
toThePower <- function(n){
pow <- function(x){
x^n
}
pow
}
toThePower(3)
cube <- toThePower(3)
cube(2)
squared <- toThePower(2)
ls(environment(cube))
ls(environmenet(squeared))
ls(environmenet(squared))
ls(environment(squared))
ls(environment(cube))
ls(environment(squared))
get(environment(cube))
get("n" environment(squared))
get("n", environment(cube))
get("n" environment(squared))
get("n", environment(squared))
squared(2)
cube(2)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x){
x * y
}
f(3)
y <- 10:13
x <- 1:4
y <- 10:13
x > 2
x >= 2
y == 8
y == 10
x * y
x / y
A <- matrix(1:16, 4, 4)
A
B <- matrix(20:36, 4, 4)
B <- matrix(21:36, 4, 4)
B
A %*% B
as.Date("1985-01-05")
unclass(as.Date("1985-01-05"))
unclass(as.Date("2015-01-01"))
class(unclass(as.Date("2015-01-01")))
unclass(as.Date("1977-25-12")-unclass(as.Date("2015-01-01"))
;
unclass(as.Date("1977-25-12"))-unclass(as.Date("2015-01-01"))
unclass(as.Date("1977-12-25"))-unclass(as.Date("2015-01-01"))
unclass(as.Date("2015-01-01"))-unclass(as.Date("1977-12-25"))
as.Date("2015-01-01")-as.Date("1977-12-25")
weekdays
weekdays(x = 1)
weekdays(2015-01-01)
weekdays("2015-01-01")
weekdays("as.Date(2015-01-01)")
weekdays(as.Date(2015-01-01))
weekdays(as.Date(2015-01-01))
weekdays(as.Date(2015-01))
as.Date(2015-01)
)
as.Date(2015-01-01)
as.Date("2015-01-01"")
Sys.time()
;
;
quit()
""
Sys.time()
as.POSIXct(Sys.time())
as.POSIXct.Date(Sys.time())
as.POSIXct.date(Sys.time())
as.POSIXct.date(as.Date(Sys.time()))
as.Date(Sys.time())
Sys.time()
as.Date(Sys.time())
as.Date(Sys.time(),format = "Y%/M%d%")
as.Date(Sys.time(),format = "d%M%Y%")
x <- as.Date(Sys.time(),format = "d%M%Y%")
x
names(x)
names(unclass(x))
names(unclass(as.POSIXlt(x)))
as.POSIXlt(x)
as.POSIXlt(x)$sec
datestring <- c("January 10, 2012 10:40", "December 9, 2011")
datestring <- c("January 10, 2012 10:40", "December 9, 2011")
datestring
strptime(datestring, "%B %d, %Y %H:M%")
datestring <- c("January 10, 2012 10:40", "December 9, 2011 9:12")
datestring
strptime(datestring, "%B %d, %Y %H:M%")
strptime(datestring, "%M %d, %Y %H:M%")
strptime(datestring, "%M %d, %Y %H:m%")
strptime(datestring, "%M %d, %Y %H:m%")
strptime(datestring, "%M %d, %Y %H:%M")
strptime(datestring, "%B %d, %Y %H:%M")
strptime(datestring, "%B %d, %Y %H:%M")[1] - strptime(datestring, "%B %d, %Y %H:%M")[2]
class(datestring)
class(strptime(datestring, "%B %d, %Y %H:%M")[1])
class(strptime(datestring, "%B %d, %Y %H:%M"))
fix(g)
answer <- NULL > for (j in 1:5)
{}
x <- seq(1, 10)
y <- x^2 - 10*x
plot(x, y)
